# -*- coding: utf-8 -*-
"""visual.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JL00jh_N1LmIwmiznzqqieDkFk2aM-R8
"""

import matplotlib.pyplot as plt
import pandas as pd

def create_grid_graphic(player_name, percentiles_dict, position, player_row):
    if percentiles_dict is None:
        print(f"No data to plot for {player_name}")
        return
    #dividing metric labels into groups
    metric_labels = {
        'Ht': ('Height (ft-in)', 'Size'),
        'Wt': ('Weight (lbs)', 'Size'),
        'Bench': ('Bench Press (reps)', 'Size'),
        '40yd': ('40 Yard Dash (seconds)', 'Explosion'),
        'Vertical': ('Vertical Jump (inches)', 'Explosion'),
        'Broad Jump': ('Broad Jump (inches)', 'Explosion'),
        '3Cone': ('3 Cone Drill (seconds)', 'Agility'),
        'Shuttle': ('Shuttle (seconds)', 'Agility')
    }

    grouped_data = {'Size': [], 'Explosion': [], 'Agility': []}

    for metric, (label, group) in metric_labels.items():
        stat_val = str(player_row[metric]) if pd.notna(player_row[metric]) else 'N/A'
        perc_val = percentiles_dict.get(metric, None)
        perc_str = f"{perc_val}" if perc_val is not None else 'N/A'
        grouped_data[group].append((label, stat_val, perc_val, perc_str))

    table_data = []
    group_row_indices = {}

    for group, rows in grouped_data.items():
        group_header_index = len(table_data)
        table_data.append([group, "", ""])
        group_row_indices[group_header_index] = True

        for label, stat_val, perc_val, perc_str in rows:
            table_data.append([label, stat_val, perc_str])
    #Setting plot axis and figures
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.axis('off')
    plt.title(f"Percentile Rankings for {player_name} among {position}s", fontsize=16, pad=2)
    text = fig.text(0.05, 0.35, 'Data: Pro-Football-Reference.com', horizontalalignment='left', wrap=True )
    col_labels = ['Metric', 'Stat', 'Percentile']
    table = ax.table(cellText=table_data,
                     colLabels=col_labels,
                     cellLoc='center',
                     loc='upper center')

    table.auto_set_font_size(False)
    table.set_fontsize(12)
    table.scale(1.2, 1.4)

    for (row, col), cell in table.get_celld().items():
        cell.set_linewidth(0)

        if row == 0:
            cell.set_facecolor('white')
            cell.set_fontsize(13)
            continue

        data_row = row - 1

        if data_row in group_row_indices:
            cell.set_facecolor('#dddddd')
            if col == 0:
                cell.get_text().set_weight('bold')
            else:
                cell.get_text().set_text("")
        else:
            if col == 2:
                value = table_data[data_row][2]
                try:
                    value_num = float(value.replace('%', ''))
                except:
                    value_num = None

                if value_num is None or pd.isna(value_num):
                    cell.set_facecolor('white')
                elif value_num < 50:
                    cell.set_facecolor('red')
                elif 50 <= value_num <= 75:
                    cell.set_facecolor('yellow')
                elif 75 < value_num <= 87.5:
                    cell.set_facecolor('lightgreen')
                else:
                    cell.set_facecolor('green')
            else:
                stat = table_data[data_row][col]
                if stat == '':
                    cell.get_text().set_text("N/A")
                cell.set_facecolor('white')

    plt.subplots_adjust(top=0.98)
    plt.tight_layout()
    plt.show()